{
  "summary": {
    "total_services_tested": 3,
    "healthy_services": 3,
    "functional_services": 3,
    "total_test_time_seconds": 0.20406866073608398,
    "timestamp": "2025-06-11 19:09:13"
  },
  "detailed_results": {
    "statistical": {
      "health": {
        "status": "healthy",
        "response_time_ms": 8.845,
        "health_data": {
          "available_tools": [
            "enhanced_statistical_analysis",
            "calculate_statistics",
            "run_statistical_test"
          ],
          "mcp_tools_available": 3,
          "service": "analytics/mcp-statistical-service",
          "status": "healthy",
          "version": "1.1"
        }
      },
      "info": {
        "status": "success",
        "info": {
          "available_tools": [
            "enhanced_statistical_analysis",
            "calculate_statistics",
            "run_statistical_test"
          ],
          "capabilities": [
            "descriptive_statistics",
            "hypothesis_testing",
            "distribution_analysis",
            "confidence_intervals",
            "data_extraction_from_variables",
            "enhanced_numerical_parsing"
          ],
          "description": "Enhanced statistical analysis service with advanced data extraction",
          "endpoints": [
            "/health",
            "/info",
            "/process_task"
          ],
          "name": "mcp-statistical-service",
          "type": "analytics",
          "version": "1.1"
        }
      },
      "functional": {
        "status": "success",
        "response_time_ms": 18.404,
        "result": {
          "result": {
            "analysis_type": "descriptive",
            "data_extracted_from_variables": false,
            "data_points": 12,
            "data_range": {
              "max": 4.5,
              "min": 1.2
            },
            "extraction_summary": {
              "extraction_successful": true,
              "numerical_values_found": 12,
              "original_variable_count": 2
            },
            "mcp_tool_used": "enhanced_statistical_analysis",
            "processed_at": "2025-06-11T23:09:13.143651",
            "processed_by": "analytics/mcp-statistical-service",
            "processing_time_ms": 2,
            "statistical_results": {
              "result": {
                "analysis_timestamp": "2025-06-11T23:09:13.143567",
                "analysis_type": "descriptive",
                "confidence_intervals": {
                  "mean_95ci": [
                    2.652433051063877,
                    3.847566948936123
                  ]
                },
                "descriptive_statistics": {
                  "kurtosis": -0.12584593901739716,
                  "max": 4.5,
                  "mean": 3.25,
                  "median": 3.3,
                  "min": 1.2,
                  "quartiles": {
                    "q1": 2.775,
                    "q2": 3.3,
                    "q3": 3.9499999999999997
                  },
                  "range": 3.3,
                  "skewness": -0.6728297282641209,
                  "std_dev": 0.9405027668994146,
                  "variance": 0.8845454545454546
                },
                "distribution_tests": {
                  "normality_test": {
                    "interpretation": "Data appears normally distributed",
                    "shapiro_wilk": [
                      0.9478378891944885,
                      0.6056216955184937
                    ]
                  }
                },
                "sample_size": 12,
                "tool_used": "enhanced_statistical_analysis"
              },
              "success": true
            }
          },
          "status": "success"
        }
      }
    },
    "neo4j": {
      "health": {
        "status": "healthy",
        "response_time_ms": 3.387,
        "health_data": {
          "available_tools": [
            "analyze_graph_centrality",
            "detect_communities",
            "find_paths",
            "analyze_structure",
            "graph_metrics",
            "community_detection"
          ],
          "mcp_tools_available": 6,
          "neo4j_status": "connected",
          "service": "graph_analytics/mcp-neo4j-service",
          "status": "healthy",
          "version": "1.0"
        }
      },
      "info": {
        "status": "success",
        "info": {
          "available_tools": [
            "analyze_graph_centrality",
            "detect_communities",
            "find_paths",
            "analyze_structure",
            "graph_metrics",
            "community_detection"
          ],
          "capabilities": [
            "centrality_analysis",
            "community_detection",
            "path_analysis",
            "graph_metrics",
            "pattern_matching",
            "graph_algorithms"
          ],
          "description": "Advanced Neo4j graph analysis service powered by MCP servers",
          "endpoints": [
            "/health",
            "/info",
            "/process_task",
            "/decision_context"
          ],
          "name": "mcp-neo4j-service",
          "type": "graph_analytics",
          "version": "1.0"
        }
      },
      "functional": {
        "status": "success",
        "response_time_ms": 115.057,
        "result": {
          "result": {
            "analysis_type": "graph_metrics",
            "decision_context": {
              "decision_summary": {
                "total_analyses": 0,
                "total_recommendations": 0,
                "total_runs": 0,
                "total_tasks": 0
              },
              "graph_ready_for_analysis": false,
              "recent_runs": []
            },
            "graph_analysis_results": {
              "error": "Unknown analysis type: graph_metrics"
            },
            "mcp_tool_used": "mock",
            "neo4j_uri": "bolt://dadm-neo4j:7687",
            "processed_at": "2025-06-11T23:09:13.278921",
            "processed_by": "graph_analytics/mcp-neo4j-service",
            "processing_time_ms": 102
          },
          "status": "success"
        }
      }
    },
    "script_execution": {
      "health": {
        "status": "healthy",
        "response_time_ms": 3.608,
        "health_data": {
          "available_executables": {
            "python": true,
            "r": true,
            "scilab": false
          },
          "available_tools": [
            "mock_python_execution",
            "mock_optimization",
            "mock_simulation"
          ],
          "max_execution_time": 300,
          "mcp_tools_available": 3,
          "sandbox_mode": true,
          "service": "computational/mcp-script-execution-service",
          "status": "healthy",
          "version": "1.0"
        }
      },
      "info": {
        "status": "success",
        "info": {
          "available_tools": [
            "mock_python_execution",
            "mock_optimization",
            "mock_simulation"
          ],
          "capabilities": [
            "python_execution",
            "mathematical_modeling",
            "numerical_analysis",
            "optimization",
            "simulation"
          ],
          "description": "Script execution service for mathematical computing",
          "endpoints": [
            "/health",
            "/info",
            "/process_task",
            "/validate_script"
          ],
          "name": "mcp-script-execution-service",
          "security": {
            "max_execution_time": 300,
            "sandbox_mode": true
          },
          "type": "computational",
          "version": "1.0"
        }
      },
      "functional": {
        "status": "success",
        "response_time_ms": 12.775,
        "result": {
          "result": {
            "execution_results": {
              "result": {
                "execution_result": {
                  "execution_time": 0.1,
                  "output": "Mock execution successful",
                  "return_value": 42,
                  "variables": {
                    "result": 42,
                    "status": "completed"
                  }
                },
                "script_type": "python"
              },
              "success": true
            },
            "execution_type": "python",
            "mcp_tool_used": "unknown",
            "processed_at": "2025-06-11T23:09:13.302686",
            "processed_by": "computational/mcp-script-execution-service",
            "processing_time_ms": 0,
            "sandbox_mode": true,
            "script_generated": false,
            "script_validation": {
              "sandbox_mode": true,
              "valid": true,
              "warnings": []
            }
          },
          "status": "success"
        }
      }
    }
  }
}