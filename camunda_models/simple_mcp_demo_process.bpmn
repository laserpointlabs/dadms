<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.34.0">
  <bpmn:process id="simple_mcp_demo" name="Simple MCP Demo Process" isExecutable="true">
    <bpmn:startEvent id="start_event" name="Start MCP Demo">
      <bpmn:outgoing>flow_to_user_input</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:userTask id="user_input_task" name="ðŸ“Š Input Data for Analysis" camunda:candidateGroups="analysts">
      <bpmn:documentation>
        Enter data that needs mathematical analysis:
        - Numbers for statistical analysis
        - Graph data for network analysis  
        - Problems for script generation
      </bpmn:documentation>
      <bpmn:incoming>flow_to_user_input</bpmn:incoming>
      <bpmn:outgoing>flow_to_analysis_gateway</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="analysis_type_gateway" name="What type of analysis?">
      <bpmn:incoming>flow_to_analysis_gateway</bpmn:incoming>
      <bpmn:outgoing>flow_to_statistical</bpmn:outgoing>
      <bpmn:outgoing>flow_to_graph</bpmn:outgoing>
      <bpmn:outgoing>flow_to_script</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="statistical_analysis_task" name="ðŸ§® Statistical Analysis" camunda:type="external" camunda:topic="statistical_analysis">
      <bpmn:documentation>
        Calls MCP Statistical Service (Port 5201)
        Performs REAL calculations:
        - Mean, median, standard deviation
        - Normality tests (Shapiro-Wilk)
        - Confidence intervals
        - Distribution analysis
        
        Implementation: "Mock" = Real math, bypasses MCP stdio
      </bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="service.url" value="http://localhost:5201/process_task" />
          <camunda:property name="service.type" value="statistical" />
          <camunda:property name="implementation" value="mock_with_real_math" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>flow_to_statistical</bpmn:incoming>
      <bpmn:outgoing>flow_stat_to_results</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="graph_analysis_task" name="ðŸ”— Graph Analysis" camunda:type="external" camunda:topic="graph_analysis">
      <bpmn:documentation>
        Calls MCP Neo4j Service (Port 5202)
        Performs REAL graph algorithms:
        - Centrality measures (PageRank, Betweenness)
        - Community detection (Louvain, Label Propagation)
        - Path analysis and network metrics
        
        Implementation: "Mock" = Real NetworkX algorithms
      </bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="service.url" value="http://localhost:5202/process_task" />
          <camunda:property name="service.type" value="graph" />
          <camunda:property name="implementation" value="mock_with_real_algorithms" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>flow_to_graph</bpmn:incoming>
      <bpmn:outgoing>flow_graph_to_results</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="script_generation_task" name="ðŸ”§ Script Generation" camunda:type="external" camunda:topic="script_generation">
      <bpmn:documentation>
        Calls MCP Script Execution Service (Port 5203)
        Performs REAL script execution:
        - Python code generation and execution
        - Mathematical optimization (SciPy)
        - Monte Carlo simulations
        - R and Scilab script execution
        
        Implementation: "Mock" = Real code execution in sandbox
      </bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="service.url" value="http://localhost:5203/process_task" />
          <camunda:property name="service.type" value="script" />
          <camunda:property name="implementation" value="mock_with_real_execution" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>flow_to_script</bpmn:incoming>
      <bpmn:outgoing>flow_script_to_results</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="process_results_task" name="ðŸ¤– LLM Analysis" camunda:type="external" camunda:topic="openai_analysis">
      <bpmn:documentation>
        OpenAI LLM processes the results from MCP services:
        - Receives HTTP response with real mathematical results
        - Interprets findings for decision making
        - Generates insights and recommendations
        
        Note: LLM never directly calls MCP - it gets results via HTTP
      </bpmn:documentation>
      <bpmn:extensionElements>
        <camunda:properties>
          <camunda:property name="service.url" value="http://localhost:5000/process_task" />
          <camunda:property name="service.type" value="assistant" />
          <camunda:property name="llm.model" value="gpt-4o" />
        </camunda:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>flow_stat_to_results</bpmn:incoming>
      <bpmn:incoming>flow_graph_to_results</bpmn:incoming>
      <bpmn:incoming>flow_script_to_results</bpmn:incoming>
      <bpmn:outgoing>flow_to_end</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="end_event" name="âœ… Analysis Complete">
      <bpmn:incoming>flow_to_end</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="flow_to_user_input" sourceRef="start_event" targetRef="user_input_task" />
    <bpmn:sequenceFlow id="flow_to_analysis_gateway" sourceRef="user_input_task" targetRef="analysis_type_gateway" />
    <bpmn:sequenceFlow id="flow_to_statistical" name="Statistical Data" sourceRef="analysis_type_gateway" targetRef="statistical_analysis_task">
      <bpmn:conditionExpression xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="bpmn:tFormalExpression">${analysis_type == 'statistical'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="flow_to_graph" name="Graph Data" sourceRef="analysis_type_gateway" targetRef="graph_analysis_task">
      <bpmn:conditionExpression xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="bpmn:tFormalExpression">${analysis_type == 'graph'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="flow_to_script" name="Script Generation" sourceRef="analysis_type_gateway" targetRef="script_generation_task">
      <bpmn:conditionExpression xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="bpmn:tFormalExpression">${analysis_type == 'script'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="flow_stat_to_results" sourceRef="statistical_analysis_task" targetRef="process_results_task" />
    <bpmn:sequenceFlow id="flow_graph_to_results" sourceRef="graph_analysis_task" targetRef="process_results_task" />
    <bpmn:sequenceFlow id="flow_script_to_results" sourceRef="script_generation_task" targetRef="process_results_task" />
    <bpmn:sequenceFlow id="flow_to_end" sourceRef="process_results_task" targetRef="end_event" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="simple_mcp_demo">
      <bpmndi:BPMNShape id="shape_start_event" bpmnElement="start_event">
        <dc:Bounds x="152" y="102" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="134" y="145" width="73" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_user_input_task" bpmnElement="user_input_task">
        <dc:Bounds x="240" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_analysis_type_gateway" bpmnElement="analysis_type_gateway" isMarkerVisible="true">
        <dc:Bounds x="395" y="95" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="383" y="155" width="75" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_statistical_analysis_task" bpmnElement="statistical_analysis_task">
        <dc:Bounds x="520" y="40" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_graph_analysis_task" bpmnElement="graph_analysis_task">
        <dc:Bounds x="520" y="140" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_script_generation_task" bpmnElement="script_generation_task">
        <dc:Bounds x="520" y="240" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_process_results_task" bpmnElement="process_results_task">
        <dc:Bounds x="680" y="140" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="shape_end_event" bpmnElement="end_event">
        <dc:Bounds x="842" y="162" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="820" y="205" width="81" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="edge_flow_to_user_input" bpmnElement="flow_to_user_input">
        <di:waypoint x="188" y="120" />
        <di:waypoint x="240" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_flow_to_analysis_gateway" bpmnElement="flow_to_analysis_gateway">
        <di:waypoint x="340" y="120" />
        <di:waypoint x="395" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_flow_to_statistical" bpmnElement="flow_to_statistical">
        <di:waypoint x="420" y="95" />
        <di:waypoint x="420" y="80" />
        <di:waypoint x="520" y="80" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="438" y="56" width="67" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_flow_to_graph" bpmnElement="flow_to_graph">
        <di:waypoint x="445" y="120" />
        <di:waypoint x="483" y="120" />
        <di:waypoint x="483" y="180" />
        <di:waypoint x="520" y="180" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="445" y="146" width="59" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_flow_to_script" bpmnElement="flow_to_script">
        <di:waypoint x="420" y="145" />
        <di:waypoint x="420" y="280" />
        <di:waypoint x="520" y="280" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="418" y="246" width="84" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_statistical_to_results" bpmnElement="flow_stat_to_results">
        <di:waypoint x="620" y="80" />
        <di:waypoint x="650" y="80" />
        <di:waypoint x="650" y="180" />
        <di:waypoint x="680" y="180" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_graph_to_results" bpmnElement="flow_graph_to_results">
        <di:waypoint x="620" y="180" />
        <di:waypoint x="680" y="180" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_script_to_results" bpmnElement="flow_script_to_results">
        <di:waypoint x="620" y="280" />
        <di:waypoint x="650" y="280" />
        <di:waypoint x="650" y="180" />
        <di:waypoint x="680" y="180" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="edge_flow_to_end" bpmnElement="flow_to_end">
        <di:waypoint x="780" y="180" />
        <di:waypoint x="842" y="180" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
