#!/bin/bash

# Test script for DADM Prompt Service in Docker
echo "üß™ Testing DADM Prompt Service in Docker"
echo "=========================================="

# Wait for services to be ready
echo "‚è≥ Waiting for services to start up..."
sleep 10

# Test 1: Health Check
echo "1Ô∏è‚É£ Testing health endpoint..."
curl -s http://localhost:5300/health | head -1
if [ $? -eq 0 ]; then
    echo "‚úÖ Health check passed"
else
    echo "‚ùå Health check failed"
fi

# Test 2: List prompts
echo -e "\n2Ô∏è‚É£ Testing prompt listing..."
PROMPT_COUNT=$(curl -s http://localhost:5300/prompts | jq -r '.count // 0')
if [ "$PROMPT_COUNT" -gt 0 ]; then
    echo "‚úÖ Found $PROMPT_COUNT prompts"
else
    echo "‚ùå No prompts found"
fi

# Test 3: Service discovery via Consul
echo -e "\n3Ô∏è‚É£ Testing Consul service discovery..."
CONSUL_SERVICE=$(curl -s http://localhost:8500/v1/health/service/dadm-prompt-service | jq -r '.[0].Service.Service // "not-found"')
if [ "$CONSUL_SERVICE" = "dadm-prompt-service" ]; then
    echo "‚úÖ Service registered with Consul"
else
    echo "‚ùå Service not found in Consul"
fi

# Test 4: Test compilation (if business_analysis_prompt exists)
echo -e "\n4Ô∏è‚É£ Testing prompt compilation..."
COMPILE_RESULT=$(curl -s -X POST http://localhost:5300/prompt/business_analysis_prompt/compile \
  -H "Content-Type: application/json" \
  -d '{
    "variables": {
      "project_name": "Docker Test Project",
      "analysis_focus": "containerization and deployment"
    },
    "include_rag": true,
    "max_tokens": 2000
  }' | jq -r '.status // "failed"')

if [ "$COMPILE_RESULT" = "success" ]; then
    echo "‚úÖ Prompt compilation successful"
else
    echo "‚ùå Prompt compilation failed"
fi

echo -e "\nüéâ Testing completed!"
echo "üìä View service docs at: http://localhost:5300/docs"
echo "üîç Monitor services at: http://localhost:5200"
echo "üóÇÔ∏è  Consul UI at: http://localhost:8500"
