# Docker Compose configuration for DADM with MCP Services
# This extends the existing DADM setup with MCP-powered mathematical analysis services

version: '3.8'

services:
  # Existing DADM services (camunda, openai-service, neo4j, qdrant, etc.)
  # ... (keeping existing services as they are)
  # MCP Statistical Analysis Service
  mcp-statistical-service:
    build:
      context: .
      dockerfile: services/mcp_statistical_service/Dockerfile
    container_name: dadm-mcp-statistical
    ports:
      - "5201:5201"
    environment:
      - SERVICE_PORT=5201
      - CONSUL_HTTP_ADDR=consul:8500
      - USE_CONSUL=true
      - MCP_SERVER_PATH=/app/mcp_servers
      - PYTHON_PATH=/usr/bin/python3
    volumes:
      - ./services/mcp_statistical_service:/app/service
      - ./mcp_servers:/app/mcp_servers:ro
      - mcp_statistical_data:/app/data
    networks:
      - dadm-network
    depends_on:
      - consul
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5201/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
  # MCP Neo4j Graph Analytics Service  
  mcp-neo4j-service:
    build:
      context: .
      dockerfile: services/mcp_neo4j_service/Dockerfile
    container_name: dadm-mcp-neo4j
    ports:
      - "5202:5202"
    environment:
      - SERVICE_PORT=5202
      - CONSUL_HTTP_ADDR=consul:8500
      - USE_CONSUL=true
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j      
      - NEO4J_PASSWORD=password
      - MCP_SERVER_PATH=/app/mcp_servers
    volumes:
      - ./services/mcp_neo4j_service:/app/service
      - ./mcp_servers:/app/mcp_servers:ro
      - mcp_neo4j_data:/app/data
    networks:
      - dadm-network
    depends_on:
      - consul
      - neo4j
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5202/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # MCP Script Execution Service
  mcp-script-execution-service:
    build:
      context: .
      dockerfile: services/mcp_script_execution_service/Dockerfile
    container_name: dadm-mcp-script-execution
    ports:
      - "5203:5203"
    environment:
      - SERVICE_PORT=5203
      - CONSUL_HTTP_ADDR=consul:8500
      - USE_CONSUL=true
      - SCILAB_PATH=/usr/local/scilab/bin/scilab
      - R_HOME=/usr/lib/R
      - PYTHON_PATH=/usr/bin/python3
      - SANDBOX_MODE=true
      - MAX_EXECUTION_TIME=300
      - MCP_SERVER_PATH=/app/mcp_servers
    volumes:
      - ./services/mcp_script_execution_service:/app/service
      - ./mcp_servers:/app/mcp_servers:ro
      - ./scripts:/app/scripts:ro
      - mcp_execution_output:/app/output:rw
      - mcp_execution_data:/app/data    
    networks:
      - dadm-network
    depends_on:
      - consul
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5203/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # Additional security for script execution
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID

networks:
  dadm-network:
    driver: bridge

volumes:
  # Existing volumes
  postgres_data:
  qdrant_storage:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  
  # New MCP service volumes
  mcp_statistical_data:
  mcp_neo4j_data:
  mcp_execution_output:
  mcp_execution_data:
