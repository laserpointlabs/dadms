openapi: 3.0.3
info:
  title: DADMS Project Service API
  version: 1.0.0
  description: |
    OpenAPI specification for the DADMS 2.0 Project Service. Defines endpoints for project management, user assignment, and related operations.
servers:
  - url: http://localhost:3000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        decision_context:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        owner_id:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ProjectCreate:
      type: object
      required: [name, owner_id]
      properties:
        name:
          type: string
        description:
          type: string
        decision_context:
          type: string
        owner_id:
          type: string
    ProjectUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        decision_context:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    UserAssignment:
      type: object
      required: [user_ids]
      properties:
        user_ids:
          type: array
          items:
            type: string
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: string

security:
  - bearerAuth: []

paths:
  /project/health:
    get:
      summary: Service health/readiness check
      description: Returns service health status, uptime, and version.
      tags: [Project]
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  uptime:
                    type: integer
                  version:
                    type: string
  /projects:
    get:
      summary: List all projects
      tags: [Projects]
      parameters:
        - in: query
          name: filter
          schema:
            type: string
          description: Filter criteria (optional)
        - in: query
          name: page
          schema:
            type: integer
          description: Page number (optional)
        - in: query
          name: pageSize
          schema:
            type: integer
          description: Page size (optional)
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    post:
      summary: Create a new project
      tags: [Projects]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/{id}:
    get:
      summary: Get project by ID
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    put:
      summary: Update project by ID
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: Delete project by ID
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Project deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/{id}/users:
    get:
      summary: List users assigned to a project
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    post:
      summary: Assign user(s) to a project
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignment'
      responses:
        '200':
          description: Users assigned
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/{id}/users/{userId}:
    delete:
      summary: Remove user from project
      tags: [Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User removed
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: [] 